package myWork;  
  
import java.util.regex.Matcher;  
import java.util.regex.Pattern;  
  
public class test {  
  
    /** 
     * @param args 
     */  
    public static void main(String[] args) {  
          
        String str="```#$%^!";  
String stest="这是一个a.test方法,版本v1.0。";     
String stest2="随便asdfasdf bcd bcd 99999 2.3";
        String regEx="[`~!@#$%^&*()+=|{}':;',\\[\\].<>/?~！@#￥%……&*（）——+|{}【】‘；：”“’。，、？]{6,8}$";  
        //①构造一个模式.  
        Pattern p=Pattern.compile(regEx);  
        Pattern pA=Pattern.compile("^[A-Z]{6,8}$");  
        Pattern pa=Pattern.compile("^[a-z]{6,8}$");  
        Pattern pNum=Pattern.compile("^[0-9]{6,8}$");  
Pattern ptest=Pattern.compile("[a-z]+|[0-9]+(.[0-9]+)|[0-9]");
//Pattern ptest=Pattern.compile("[0-9]+(.[0-9]{2})");
          
        //②建造一个匹配器  
        Matcher m = p.matcher(str);  
        Matcher m1 = pA.matcher(str);  
        Matcher m2 = pa.matcher(str);  
        Matcher m3 = pNum.matcher(str);  
        Matcher mtest=ptest.matcher(stest2);
while(mtest.find()){
	System.out.println(mtest.start());
	System.out.println(mtest.end());
	System.out.println(mtest.group());
}
//System.out.println(mtest.group(0));
//mtest.matches();
//System.out.println(mtest.toMatchResult());
//System.out.println(mtest.end());
        //大小写字母，数字，特殊字符 全集匹配（只要字符串匹配其中任何一个或多个都可以）  
        String reg="([A-Z]|[a-z]|[0-9]|[`~!@#$%^&*()+=|{}':;',\\[\\].<>/?~！@#￥%……&*（）——+|{}【】‘；：”“’。，、？]){6,8}$";  
        Pattern pAll=Pattern.compile(reg);  
        Matcher mAll = pAll.matcher(str);  
        //③进行判断，得到结果  
          
        //因为字符串str如果匹配一个就不可能匹配其他的，具有互异性。还要排除都不匹配的情况，不满足这四项的字符  
        if(m.matches()||m1.matches()||m2.matches()||m3.matches()){  
        	
            System.out.println("只满足一种情况不符合要求");   
        }else if(mAll.matches()){  
            System.out.println("符合6-8位的密码要求");  
        }else{  
            System.out.println("不符合要求");  
        }  
      
          
    }  
  
}  